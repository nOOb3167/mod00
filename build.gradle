plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
	id 'io.freefair.lombok' version "8.0.1"
}

repositories {
	maven { url = "https://maven.parchmentmc.org" }
	maven { url = 'https://maven.ladysnake.org/releases' }
	maven { url = "https://maven.florens.be/releases" }
	// https://github.com/florensie/ExpandAbility/issues/5#issuecomment-1330341909
	maven { url = 'https://jitpack.io' }
}

java {
	toolchain {
		JavaLanguageVersion.of(17)
	}
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"%{project.name}" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	//mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.20.1:2023.07.09@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	include modImplementation("com.github.0x3C50:Renderer:master-SNAPSHOT")
	include modRuntimeOnly("be.florens:autoload-fabric:1.1.3")
}

processResources {
	def props = ["version": "${project.version}"]
	inputs.properties props
	filesMatching("fabric.mod.json") {
		expand props
	}
}

java {
	withSourcesJar()
}
